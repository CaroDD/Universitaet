Vorlesung 6.2
Speicher

RAM 
Überblick
— Schreib-/Lesespeicher mit wahlfreien Zugriff (Random-Access-Memory)
— Inhalt von jeder beliebigen Speicherzelle direkt verfügbar durch Angabe einer Adresse
— Unterscheidung gegenüber
	- Speicher mit seriellen Zugriff (z.B. Schieberegister, FIFO-Speicher)
	- Assoziativ-Speicher (ein Teil der gespeicherten Information dient selbst zur Kennzeichnung der Speicherplatzes)

Prinzipieller Aufbau
— Zeilendekodierer
	- Wählt nach Adresse eine Zeile aus und setzt die jeweilige Wordline (WL)
— Bei Lesen: Zellen der ausgesuchten Zeile bestimmen Bitlines (BL)
— Spaltenschaltung kann Verstärker enthalten
— Problem: viel Speicher -> viele Rows -> sehr länglich, sehr lange Leitungen
	- Z.B. 1024 32 Bit Wörter -> 1024 Zeilen, 32 Spalten

Erweiterter Aufbau mit Spaltendekodierer
— Zeilendekodierer
	- Wählt nach Adresse eine Zeile aus und setzt die jeweilige Wordline (WL)
— Bei Lesen: Zellen der ausgesuchten Zeile bestimmen Bitlines (BL)
— Spaltenschaltung kann Verstärker enthalten
— Problem: viel Speicher -> viele Rows -> sehr länglich sehr lange Leitungen
— Alternative:
	- Spaltendekodierer / Column Decoder
	- Mehrere Wörter in eine Row

Überblick (2)
— Anordnung als quadratische Matrix aus n Zeilen und n Spalten
	- Speicherzellen an den Kreuzungspunkten der Matrix
	- Speicherzelle der Kapazität 1 Bit wird durch die zugehörigen Zeilen- und Spaltenleitungen adressiert (Adresseingänge A0 – Ai-1)
— Neben den Adresseingängen besitzt ein RAM weitere Leitungen:
	- Din (Dateneingang), Dout (Datenausgang)
	- WE (Write Enable, Schreibaktivierung)
	- CS (Chip Select, Bausteinauswahl)	


SRAM Überblick
— Speicherzelle mit internem Feedback
— Behält Wert so lang Spannung anliegt
— Eigenschaften
	- Dichter als Flip-Flops
	- Kompatibel mit Standard CMOS Prozessen
	- Schneller als DRAM
	- Einfacher zu nutzen als DRAM

1-Bit-Speicherzelle eines SRAM, 6 Transistoren pro Speicherzelle
— Q & \Q : Speicherzustand
	- Wenn Q aktiv ist, ist \Q inaktiv und vice-versa
	- Bestimmt aktuell gespeicherten Wert 1 oder 0 (gleich Beispiel)
— V_DD Drain Supply Voltage und GND
	- Spannung zwischen V_DD und GND
	- M1 bis M4 verbinden Q mit GND oder VDD
— BL und \BL : Bitline, „negierte“ Bitline
	- Wird genutzt um zu setzen und zu lesen
— WL : Wordline
	- Öffnet M5, M6 während lesen und schreiben

Halten (Wert=0)
— Lege 0 an WL an --> M5, M6 geschlossen
— M1 bis M4 in konstantem, selbsterhaltendem Zustand
— Anlegen von low an WL

Lesen
— Lege high an BL, \BL, WL an
— Im Beispiel Q = 0 (funktioniert aber genauso mit 1)
— BL geht durch M5 (\BL geht durch \M6 )
	- M3 muss stärker als M5 sein (und M4 > M6), damit Spannung abfließen kann! --> read stability
	- BL erhöht Q etwas, aber nicht genug um M2 zu schließen oder M4 zu öffnen
	- BL sinkt
— Nach etwas Zeit: BL ist low, \BL bleibt high --> 0 gelesen

Schreiben
Beispiel: Schreibe 1 nach Q
— Anlegen von high an BL, low an BL
— Anlegen von high an WL
— Wert von BL fließt ab (M3 > M5) (read stab.)
— M2 muss kleiner als M6 sein --> writability
	- senkt \Q --> M3 geht aus, M1 geht an --> Q wird high

Lese- und Schreibsignale (Speicherzellenebene)
Lesen:				Schreiben
1. Setze BL, \BL high 		1. Setze entweder BL oder \BL low (hier: \BL)
2. Setze WL high 		2. Setze WL
-> BL oder \BL wird low 	-> Q ändert Zustand

Lesesignale (Bausteinebene)
— Beginnt mit dem Anlegen der Adresse (Bestimmt WL)
— \CS = 0 (Invertiertes Chip Select -> Wähle Chip aus)
— \WE =1 (Invertiertes Write Enable -> Lesen)
— OE = 0 (Output Enable)
-> Leseverstärker werden niederohmig geschalten
-> Nach der Adressen-Zugriffszeit t_AA liegen die gültigen Daten stabil an den Datenausgängen an

Schreibsignale (Bausteinebene)
— Beginnt mit dem Anlegen der Adresse (Bestimmt WL)
— \CS = 0 (Invertiertes Chip Select -> Wähle Chip aus)
— \WE = 0 (Invert. Write Enable = 0 -> Schreiben)
--> Anschließend müssen die Daten genügend lange an den Dateneingängen anliegen, damit der Speichervorgang fehlerfrei abläuft

Praktische Relevanz und Zusammenfassung
— SRAMs werden z.B. in Caches verwendet
	- Architektur, Organisation von Cache-Speicher war Gegenstand der Vorlesung RAI
— Schneller Zugriff, aber erheblicher Platzbedarf
— Information bleibt nur solange Betriebsspannung anliegt (flüchtiger Speicher)
— Teuer

DRAM:
Aufbau
— 1-Bit-Speicherzelle eines DRAM:
— Eigentliche Speicherzelle besteht aus Kondensator C_Cell
— Geladener Zustand: x=1
— Ungeladener Zustand: x=0
— Transistor verbindet Kondensator C_Cell mit Bitline bei Anwahl durch die Wordline
— Entladung des Kondensators
	- Beim Lesen durch Leitungskapazitäten
	- Durch Leckströme innerhalb der Zelle

Übersicht
— Geringerer Platzbedarf als SRAM
— Entladung des Kondensators erfordert „Auffrischen“ der Speicherzellen
	- Geschieht einerseits implizit mit jedem Schreib- und Lese-Zyklus
	- Sämtliche Bits der ausgewählten Matrixzeile
	- Lese- bzw. Schreibzykluszeit signifikant größer als eigentliche DRAM-Zugriffszeit
	- Zeitdifferenz = Speichererholzeit (recovery time)
	- Explizite Refresh-Zyklen für alle Matrix-Zeilen
	- „Auffrischen“ gehört zu den Aufgaben des DRAM-Controllers

Multiplexverfahren
— Adressen werden beim DRAM im Multiplexverfahren eingegeben
— Zuerst wird die Zeilenadresse bei \RAS = 0 (Row Address Strobe, Zeilenadressen-Puls) eingegeben
— Danach wird mit \CAS = 0 (Column Address Strobe, Spaltenadressen-Puls) die Spaltenadresse übernommen
— Verantwortlich dafür ist der DRAM-Controller
— DRAM hat nur halb so viele Adressanschlüsse wie SRAM bei gleicher Kapazität
	- Weitere Platzeinsparung

Lesesignale
— Beginnt mit dem Anlegen der Zeilenadresse,
danach der Spaltenadresse (Bestimmt WL)
— \WE =1 (Invertiertes Write Enable -> Lesen)
--> Nach der Adressen-Zugriffszeit t_AA liegen die gültigen Daten stabil an den Datenausgängen D_out an

Schreibsignale
— Beginnt mit dem Anlegen der Zeilenadresse, danach der Spaltenadresse (Bestimmt WL)
— \WE =0 (Invert. Write Enable -> Schreiben)
— Anschließend muss die Information genügend lange am Dateneingang anliegen, damit der Speichervorgang fehlerfrei abläuft
— t_wc Write Cycle Time

Verschränkung von Speicherbänken (Interleaving)
— Bei Direktzugriff des Prozessors auf den DRAM-Hauptspeicher sind unmittelbar aufeinanderfolgende Zugriffe zunächst nur im Abstand der Zykluszeit möglich.
	- Datenübertragung des ersten Zugriffs nach Ablauf der Zugriffszeit abgeschlossen
	- Bis zur Durchführung des nächsten Zugriffs muss jedoch Erholzeit der Bausteine (das Rückschreiben) abgewartet werden
— Lösung
	- Speicher wird in eigenständige Bänke unterteilt
	- Aufeinanderfolgende Zugriffe verursachen Bankwechsel

Verschränkung von Speicherbänken (Interleaving)
— Direkt aufeinanderfolgende Lesezugriffe bei einer Speicherbank
— Zugriff bei zwei verschränkt adressierten Speicherbänken

DRAM Entwicklung

Fast-Page-Mode-DRAM (FPM DRAM), 1987
— Reduzierte Zugriffszeiten
— Mit \RAS = 0 wird die gesamte zugehörige Speicherzeile (Page) parallel in eine Zeile von
	Leseverstärkern übertragen und dort zwischengespeichert
— Anschließende Übergabe der Spaltenadresse mit \CAS = 0 führt nun zum Auslesen des adressierten Leseverstärkers
— Technik lässt Fast Page Mode zu
	- Nach einmalig übergebener Zeilenadresse können sequentiell nacheinander die durch unterschiedliche
		Spaltenadressen ausgewählten Daten aus dem Leseverstärker abgerufen werden
	- Bedingung ist, dass die Daten in derselben Zeile liegen
— Gegenüber der RAS-Zugriffszeit t_RAS kann die für den Fast Page Mode entscheidende CAS-Zykluszeit t_CAS nahezu halbiert werden

Fast Page Mode-Lesezyklus für vier Datenbytes bei einem FPM-DRAM
— Anmerkung: Bei Page-Hit-Zugriffen wird t_CAS auch Fast Page Mode-Zykluszeit genannt

Enhanced DRAM (EDRAM)
— Weiterentwicklung des Fast-Page-Mode-DRAMs
— Unterschied
	- FPM DRAM: Zeilenadresse wird parallel in ein Leseverstärkersystem übertragen
	- EDRAM: nutzt dafür einen SRAM-Cachespeicher
	--> \CAS-Zugriffszeit bei Cache-Hit von 15 ns


Extended-Data-Output-DRAM (EDO-DRAM), 1995
— Weiterentwicklung des Fast-Page-Mode-DRAMs
— Signal hat bei FPM DRAM zwei Aufgaben:
- Fallende Flanke übernimmt gültige Speicheradresse bei Leseoperation
- Steigende Flanke signalisiert, dass Datum gelesen wurde und Datentreiber hochohmig gestellt werden
können
Ø Erst nach weiterer !"#-Precharge-Zeit kann nächste Spaltenadresse angelegt werden (begrenzt Datenrate)
— EDO-RAM steuert die Datentreiber nicht durch die Rückflanke von !"# sondern durch interne
Signale
- Nächste Spaltenadresse kann mittels !"# übergeben werden, während am Ausgang das vorherige Datum
noch gültig ist
Ø Bezogen auf FPM DRAM ist der Datenausgang länger aktiv à „Extended-Data-Output"



















