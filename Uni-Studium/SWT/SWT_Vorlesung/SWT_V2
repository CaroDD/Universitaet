SWT 2. Vorlesung 08.04.2019

Halde (heap) -> Speicherdaten anlegen (JAVA new)
		dynamischer Speicher
JAVA hat automatische Speicherbereinigung (aber nicht in Echzeitanwendung verwendet; Zeitverzögerung bei Speicherbereinigung)
Keller (stack) -> keine Methoden vorhanden
Stringspeicher -> speichert Strings
Codespeicher -> beinhaltet Methoden & Code

Klasse = Menge aller Objekte
	Verhaltensklassen (gleiches Verhalten aller Objekte)
	Strukturklassen (gleiche Struktur)
	Äquivalenzklassen (Männer, Frauen)
haben Struktur- & Verhaltensmerkmale (features, in Java members), die an Objekte übergeben werden 

Objekte: Elemente, Ausprägungen oder Instanzen einer Klasse
	Simulierte Objekte (Ampeln, Türen, ...)
	Simulierte abstrakte Objekte (Rechnungen, Adressen, ...)
	Substantivierte Handlungen

Zustandsinvariante Methoden: queries (Anfragen), checker (Prüfer), tester
Zustandsverändernde Methoden: Modifikatoren, Repräsentationswechsler, Allgemeine Methoden

Objektnetze --> Selbststudium (Kapitel 10)
	Verknüpfung aller Objekte (auch Klassenübergreifend)
	Aufbauphase -> Arbeitsphase -> Umbauphase -> Abbauphase (in Java automatisch)#

Vererbung & Polymorphie
CAPP (copy and paste programming) -> ca 10-20% eines Codes
	verschmutzen den Code
	unsoziales Programmieren (größerer Aufwand beim Bearbeiten)
	--> Alternative: Vererbung
		einfache: eine Oberklasse je Unterklasse
JAVA: UNTERKLASSE extends OBERKLASSE {};

Taxonomie = Begriffshierarchien (wichtig für Lernen)
Operationale Klassenhierarchie = enthält Methoden (Erweiterung der Taxonomie)

Refactor: Einfügen von Zwischenklassen
Horizontale, vertikale und zwischengeschobene Erweiterungen funktionieren immer!
	--> mit Tests belegen
Biologisches Programmieren:
	Vererbungshierarchie nachträglich erweitern
	refaktorisieren (Erweiterungen vorbereiten)
	Liskow'sche Prinzip für Erweiterungen mit Tests zusichern

Vererbungsrelation is a
Instanzierungsrelation instance of

Oberklassen allgemeiner (Generalisierung)
Unterklassen spezieller (Spezialisierung)
	Unterklassen erben alle Merkmale der Oberklassen
	Unterklassen können nur eine Oberklasse je Hierarchielevel haben

Methoden/Merkmalssuche:
suche von unten nach oben (Wenn die Klasse die Methode nicht definiert, suche in der Oberklasse)
(Kapitel 11, Folie 22/23)
	wenn Befehl nicht vorhanden: "method not found" / "message not understood"

Redefinition = Methoden können überschrieben werden in der Unterklasse, sofern der Aufrufer nicht behindert wird
Terminverwaltung = auf terminverschieben() muss reagiert werden

clone () = kopiert Objekt
equals = Gleichheit
toString() = Textdarstellung

alle Klassen werden automatisch in Object als Unterklasse geworfen

Blooms Taxonomie des Lebens:
Lehrlingsschaft
	1) Kenntnis / Wissen
		Definitionen, Begriffe
	2) Verstehen
		Erklären, mit eigenen Worten Definitionen wiedergeben
Gesellenschaft
	3) Anwenden
		Transfer, problemlösend
	4) Analyse
		Widersprüche aufdecken, Zusammenhänge erkennen
	5) Synthese
		neue Struktur aufbauen, neue Lösungswege vorschlagen
Meisterschaft
	6) Beurteilung
		Wert beurteilen

Safari books online

Polymorphie = Ein Bezeichner/Objekt kann mehrere Datentypen annehmen
Suche kann teuer werden --> dispatch optimization
dynamische Suche = dynamic dispatch
































