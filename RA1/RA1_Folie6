Schaltwerke:

Zielstellung:
- Kennenlernen einfacher rückgekoppelter Schaltnetze, Basis-Flipflop
- Einführung der funktionellen Bedeutung der Zeit
- Einführung des SR-Flipflop als elementares Speicherglied
- Darstellungsvarianten des SR-Flipflop im Gegensatz zu Schaltnetzen
- Übergang zu synchronen, taktgesteuerten und komplexen Speichergliedern
- Einführung des taktflankengesteuerten D-Flipflop als universelles Speicherglied und seiner Darstellungsvarianten
- Vermittlung des Überganges von kombinatorischen zu sequentiellen Schaltungen, von Schaltnetzen zu Schaltwerken
- Kennenlernen einer kurzen Übersicht zur Automatentheorie
- Darstellungsvarianten von Schaltwerken
- Einführung in die Analyse und Synthese von Schaltwerken

Übersicht, Begriffserklärung:
- Schaltwerke – Hauptbestandteile von Computern (v. Neumann Rechner)
- Schaltwerke enthalten Schaltnetze, Speicherglieder (Flipflops) und Signalrückführungen
	der in den Speichergliedern gespeicherte Zustand heißt „innerer Zustand“ des Schaltwerkes
- bei einem Schaltwerk hängen die Werte der Ausgangsvariablen von denen 
	der Eingangsvariablen und vom inneren Zustand (der Vorgeschichte) ab
- einer Wertefolge der Eingangsvariablen ist damit eindeutig eine
	Wertefolge der Ausgangsvariablen zugeordnet ( → Anfangszustand)
- charakteristisch für ein Schaltwerk ist die funktionelle Bedeutung der
	Zeit (diskrete Zeitpunkte werden durch ein Taktsignal realisiert)
- Flipflops sind einfache Schaltwerke

Schaltwerk, Sequentielle Schaltung:
Schaltwerk (nach DIN44300):
Ein Funktionseinheit zum Verarbeiten von Schaltvariablen, bei der die
Werte aller Schaltvariablen am Ausgang (Ausgangsvariablen) zu einem
bestimmten Zeitpunkt t_0 nach Verstreichen der Lauf- und Verzögerungs-
zeit ∆t nur von den Werten aller Schaltvariablen am Eingang
(Eingangsvariablen) zum Zeitpunkt t-∆t abhängen und zu endlich vielen
vorangegangenen Zeitpunkten sowie ggf. vom Anfangszustand.
(Ein Schaltwerk hat eine endlich Anzahl von inneren Zuständen und ist
abstrakt gesehen ein endlicher Automat. Falls keine besonderen
Vorkehrungen getroffen werden, können Schaltwerke beim Einschalten
einen unbestimmten Anfangszustand annehmen.)

Speicherglied (nach DIN44300) :
Ein Bestandteil eines Schaltwerkes, der Werte von Schaltvariablen aufnimmt, aufbewahrt und abgibt.

Schaltnetz -> Speicherglied -> Schaltwerk

Tabelle:
x_1	x_2	y_1	y_2
0	0	0	1
0	0	1	0
0	1	1	0
1	0	0	1
1	1	0	0

Bei x_1 = x_2 = 0 gibt es zwei mögliche Belegungen für y_1 , y_2 ➔kein Schaltnetz
(y_1 = y_2 = 0 und y_1 = y_2 = 1 sind keine Lösungen ➔ Widerspruch)
Die Lösungen für y_1 , y_2 bei x_1 = x_2 = 0 sind von der vorherigen Belegung der Ausgänge y_1 , y_2 abhängig ➔ Speicherung, Zeitverhalten

Zeitverhalten, Zustand:
- Außer bei der Eingangsbelegung x_1 = x_2 = 1 werden immer komplementäre
	Ausgangsbelegungen ausgegeben --> bistabile Kippschaltung, Flipflop.
		x_1 ∧ x_2 = 0 → y_1 = y_2
		x_1 ∧ x_2 = 1 → y_1 = y_2 = 0
- Die bei der Eingangsbelegung x_1 = x_2 = 0 eingenommenen Ausgangswerte
	werden als Zustand des Flipflop definiert 					--> gespeicherter Zustand.
- Die mit den Eingangsbelegungen x_1 = 0, x_2 = 1 und x_1 = 1, x_2 = 0
	eingenommene Ausgangswerte y_1 =1, y_2 =0 bzw. y_1 =0, y_2 =1 werden beim
	Übergang der Eingangswerte zu x_1 = x_2 = 0 im Flipflop gespeichert.
- Die mit der Eingangsbelegung x_1 = x_2 = 1 eingenommene Ausgangswerte
	y_1 = y_2 = 0 können beim Übergang zu x_1 = x_2 = 0 im Flipflop nicht gespeichert
	werden. Es erfolgt stattdessen nach einer Einschwingphase eine
	Speicherung von y_1 = 1, y_2 = 0 oder y_1 = 0, y_2 = 1 				--> bistabile Kippschaltung.
- Es handelt sich nicht um ein Schaltnetz, da keine eindeutige Abbildung der
	Eingangsbelegungen auf die Ausgangsbelegungen möglich ist.

Funktionelle Bedeutung der Zeit:

R(t_n)	S(t_n)		Q(t_(n+1))	\Q(t_(n+1))	Zustandsfolgetabelle
0	0		Q(t_n) 		\Q(t_n) 	speichern
0	1		1		0		setzen
1	0		0		1		rücksetzen
1	1		-		-		nicht zulässig
1

SR-Flipflop
Mit Ausnahme von R=S=1: Die den Eingangsbelegungen R(t_n), S(t_n) zum aktuellen Zeitpunkt t_n entsprechenden Ausgangswerte werden zum
Folgezeitpunkt t_(n+1) als neuer Zustand des Flipflop Q(t_(n+1)), \Q(t_(n+1)) gespeichert.
- R(t_n)=S(t_n)=0 	keine Zustandsänderung: Q(t_(n+1))=Q(t_n), \Q(t_(n+1))=\Q(t_n)
- R(t_n)=0, S(t_n)=1 	Zustandsänderung: Q(t_(n+1))=1, \Q(t_(n+1))=0
- R(t_n)=1, S(t_n)=0	Zustandsänderung: Q(t_(n+1))=0, \Q(t_(n+1))=1
- R(t_n)=S(t_n)=1 	nicht zulässig, da Ausgangsbelegung nicht speicherbar

SR-Flipflop, Zustandsfolgetabelle:
SR-Flipflop (Basis-Flipflop)
Kurzdarstellung
R(t_n)→ R
S(t_n)→ S
Q(t_n)→ Q
Q(t_(n+1)) → Q⁺

(t_n)				(t_(n+1))
R	S	Q		Q⁺		Zustandsfolgetabelle
0 	0	0		0		speichern
0	1	0		1		setzen
1	0	0		0		rücksetzen
1	1	0		- 		nicht zulässig

0 	0	1		0		speichern
0	1	1		1		setzen
1	0	1		0		rücksetzen
1	1	1		- 		nicht zulässig

Abbildung aktueller Zeitpunkt --> Folgezeitpunkt

SR-Flipflop, Zustandsübergangstabelle:
Zustandsübergangstabelle
(t_n)	→ 	(t_(n+1))	(t_n)
Q 	→	Q⁺ 		R 	S
0	→	0		X	0	speichern oder rücksetzen, nicht setzen	
0	→	1		0	1	setzen
1	→	0		1	0	rücksetzen
1	→	1		0	X	speichern oder setzen, nicht rücksetzen

Antwort auf die Frage: Welche Belegung der Eingänge R und S ist erforderlich, um vom Zustand Q in den Zustand Q⁺ zu gelangen (--> Zustandsübergang)?

Zustandsgraph:
Knoten: entsprechen den Zuständen
Kanten: entsprechen den Zustandsübergängen Anfangszustand, einseitige Kante

Zustandsfolgetabelle --> Zustandsübergangstabelle --> Zustandsgraph

Darstellungsvarianten
- Schaltsymbol
- Zustandsfolgetabelle
- Zustandsübergangstabelle
- Zustandsgraph
- Boolesche Gleichung

Synchrone Speicherglieder:
Asynchrone Speicherglieder:
Der Zustand und die Ausgangswerte ändern sich unmittelbar nach der
Änderung der Eingangswerte --> Datensteuerung (bisherige Betrachtung)

Synchrone Speicherglieder:
Der Zustand und die Ausgangswerte ändern sich synchron zu einem
Taktsignal --> Taktsteuerung (Einführung eines Taktsignales)
Taktsignal (Clock, Synchronisationssignal): C
aktiver Taktzustand C=1 -->Taktzustandssteuerung
aktive Taktflanke C↑ o. C: 0 →1 --> Taktflankensteuerung

Synchrones SR-Flipflop
- taktzustandsgesteuert
- taktflankengesteuert

Synchrones SR-FF, Zustandsfolgetabelle:

Taktzustandsgesteuertes SR-Flipflop
R	S	C	Q⁺
0	0	1	Q	speichern
0	1	1	1	setzen
1	0	1	0	rücksetzen
1	1	1	-	nicht zulässig
X	X	0	Q 	speichern

Taktflankengesteuertes SR-Flipflop
R	S	C	Q⁺
0	0	↑	Q	speichern
0	1	↑	1	setzen
1	0	↑	0	rücksetzen
1	1	↑	-	nicht zulässig
X	X	sonst	Q 	speichern

Auf die Angabe des Taktes in der Zustandsfolgetabelle und im Zustandsgraphen
kann verzichtet werden, wenn als Nebenbedingung die Art der Taktsteuerung mit angegeben wird (TZS oder TFS).
Ist der Takt nicht aktiv (Zustand oder Flanke), so speichert das Flipflop in jedem Fall den aktuellen Zustand.

Komplexe Speicherglieder:
Ansteuerschaltungen für das SR-Flipflop zur Vermeidung der nicht zulässigen
Eingangsbelegung S=R=1 und für spezielle Ansteuervarianten und Funktionen

Flipflop Varianten:
Typ 	Eingänge 	Funktionen
T-FF	1 		invertieren, speichern
D-FF	1		setzen, rücksetzen
SR-FF	2		speichern, setzen, rücksetzen
JK-FF	2		speichern, setzen, rücksetzen, invertieren

Die einzelnen Flipflop-Typen lassen sich durch Zusatzbeschaltungen
ineinander überführen. Alle Flipflop-Typen sind gleichwertig anwendbar.
In der Computertechnik dominieren D-Flipflop (Delay-Flipflop) mit Taktflankensteuerung (teilweise auch mit Taktzustandssteuerung).

D-Flipflop TFS, Darstellungsvarianten:
Zustandsfolgetabelle
D	Q⁺
0	0
1	1

Zustandsübergangstabelle
Q 	→ 	Q⁺	D
0	→	0	0
0 	→	1	1
1 	→	0	0
1	→	1	1

Alle Zustandsübergänge erfolgen bei einer aktiven Taktflanke C↑ (positive Taktflanke) !
Zustandsgraph; Boolesche Gleichung: Q⁺ := D

Schaltwerke – Sequentielle Schaltungen:
Bestandteile von Schaltwerken:
- Speicherglieder (Flipflop)
- Schaltnetze
- Verbindungen, Rückführungen
- Taktsignal (à synchrone Schaltwerke).

Allgemeine Darstellungsform (Huffman-Modell)


Zustandsautomaten, Automatentheorie:
Automat – Modellmaschine
- abstraktes mathematisches Modell -->
- Kennzeichnung durch einen inneren Zustand --> Zustandsautomat
- Automaten arbeiten sequentiell, gesteuert durch Takt oder Eingang.
- Automaten durchlaufen eine Abfolge von Zuständen, beginnend mit einem Anfangszustand, in Abhängigkeit von Eingangswerten oder Takt.
- Die Ausgabewerte der Modellmaschine sind von den aktuellen Eingabewerten und vom momentanen inneren Zustand der Maschine abhängig.

Endliche Automaten:
Die Menge der möglichen Eingabezeichen (Eingabealphabet), der Ausgabezeichen (Ausgabealphabet) und die Zahl der möglichen inneren
Zustände (Zustandsmenge) sind endlich.

Deterministische Automaten:
Das Verhalten der Modellmaschine ist deterministisch, für eine gegebene Folge von Eingangswerten komplett vorhersagbar, determiniert.

Zustandsautomat - Schaltwerk:
Automat – Schaltwerk
- Automaten bilden die Grundlage für den Entwurf und die Beschreibung von sequentiellen digitalen Systemen.
- Schaltwerke stellen eine technische Realisierung der Automaten dar.
- Schaltwerke sind deterministische endliche Automaten (DEA) (auch FSM – Finite State Machine)
- Jeder DEA kann durch ein Schaltwerk realisiert werden und umgekehrt, jedes Schaltwerk kann als DEA beschrieben werden.
- Nichtdeterministische endliche Automaten (NDEA) können durch geeignete Maßnahmen in deterministische endliche Automaten (DEA) umgeformt werden.

Deterministische Endliche Automaten (DEA):
Ein deterministischer endlicher Automat (DEA) A kann als 7-Tupel definiert werden:
A = (X, Y, Z, f, g, z⁰, E)
X: Eingabealphabet
Y: Ausgabealphabet
Z: Zustandsmenge
y = f(x,z) Ausgangsfunktion		f : X × Z → Y	
z⁺ = g(x,z) Übergangsfunktion		g : X × Z → Z
z⁰ ∈ Z	Anfangszustand
E ⊆ Z Finalzustandsmenge
x ∈ X Eingangsvektor
y ∈ Y Ausgangsvektor
z ∈ Z Zustandsvektor
z⁺ ∈ Z Zustandsfolgevektor
x ∈ U Menge der Eingangsvariablen
y ∈ V Menge der Ausgangsvariablen
z ∈ W Menge der Zustandsvariablen

- Mit Hilfe der beiden Funktionen f, g und dem Anfangszustand z⁰ kann das
	Verhalten eines Automaten ausreichend beschrieben werden.
		z⁺ = g(x,z)
		y = f(x,z)
		z⁰ = ( )
		z := z⁺	Zustandsübergang der Speicherglieder
- Bei Schaltwerken ist zusätzlich die Beschreibung der Speicherglieder erforderlich (Typ, Steuerung).
- Die Anzahl der Zustände, die ein Automat bei Vorgabe von f, g und z⁰ überhaupt einnehmen kann, 
	kann kleiner sein als die maximal mögliche Zustandsanzahl.

Zustandsbestimmung
Der Zustand z^n eines deterministischen endlichen Automaten (DEA) zum
Zeitpunkt t_n bestimmt sich entweder aus dem Zustand z^(n-1) und dem Eingangswert
x^(n-1) zum vorherigen Zeitpunkt t_(n-1) oder aus dem Anfangszustand z⁰ und der
gesamten Folge der Eingangswerte x⁰ , ..., x^(n-1) von t_0 beginnend, bis zum vorherigen
Zeitpunkt t_(n-1).
Im momentanen inneren Zustand des Automaten sind implizit alle seine vorhergehenden Zustände enthalten.
Beginnend mit einem Anfangszustand z⁰ bestimmt eine Folge von Eingangswerten x⁰ , ..., x^n eine Folge von Zuständen z¹ , ..., z^n und
entsprechend eine Folge von Ausgangswerten y⁰ , ..., y^n .
➔ Der Anfangszustand z⁰ ist dabei von entscheidender Bedeutung.
➔ Hat der Zustandsvektor z eine Dimension von i (Zustandsvariablen), dann sind
maximal 2^i verschiedene Zustände möglich --> Zustandskodierung.

Mealy-Automat (allgemeinste Form):
Mealy-Automaten sind übergangsorientiert.
Änderungen des Einganges beeinflussen sofort den Ausgang. Sie stellen die
allgemeinste Form der deterministischen endlichen Automaten dar.

Moore-Automat:
Moore-Automaten sind zustandsorientiert.
Änderungen des Einganges beeinflussen den Ausgang erst zum
Folgezustand. Sie stellen einen Sonderfall des Mealy-Automaten.

Autonomer Automat:
Autonome Automaten sind nicht eingangsgesteuert.
Änderungen des Einganges beeinflussen somit weder den Ausgang noch
den Folgezustand. Sie stellen einen Sonderfall des Moore-Automaten und
verfügen nicht über einen Eingang.

Darstellung von Schaltwerken:
Es gibt verschiedene mögliche Formen der Schaltwerksdarstellung. Alle
Varianten sind inhaltlich gleichwertig und können ineinander überführt
werden. Bezüglich der Anschaulichkeit und Nutzbarkeit gibt es Unterschiede.
- Boolesche Gleichungen (Automat)
- Zustandsfolgetabelle (Automatentabelle)
- Zustandsübergangstabelle
- Zustandsgraph
- Impulsfolgediagramm
- Schaltplan (Logikplan)
- Schaltsymbol (DIN-Norm)
- Hardwarebeschreibungssprachen (VHDL, Verilog, SystemC, ...)
- Programmiersprachen
- Binäre Entscheidungsgraphen (BDD), Speicherelemente


Analyse von Schaltwerken:
1. Schaltplan	------------->	Speicherglieder z:=z⁺ ; z⁰
|
|		Eingänge x, Ausgänge y, Takt, Zustandskodierung z
v
2. Blockschaltbild <----------	Schaltnetze f, g
|
|		Herauslesen der Schaltfunktionen f, g und Analyse
v
3. Boolesche Gleichungen f, g ----------> Zustandsfolgetabelle
|
|	
v
4. Zustandsgraph <--------- Zustandsübergangstabelle
	|				|
	|				|
	v				v
	Schaltwerksbeschreibung, Funktionalität

















